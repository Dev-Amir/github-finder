{"version":3,"sources":["Assets/Components/Header/Brand/Brand.js","Assets/Components/Header/Icon/Icon.js","Assets/Components/Header/Header.js","Assets/Services/GithubApi.js","Assets/Context/Context.js","Assets/Components/Main/Search/Search.js","Assets/Components/Global/Loading/Loading.js","Assets/Components/Main/LoadingUser/LoadingUser.js","Assets/Components/Main/User/Profile/Avatar/Avatar.js","Assets/Components/Main/User/Profile/InformationUser/InformationUser.js","Assets/Components/Main/User/Profile/Profile.js","Assets/Components/Main/User/Repo/ListRepo/ListItemRepo/ListItemRepo.js","Assets/Components/Main/User/Repo/ListRepo/ListRepo.js","Assets/Components/Main/User/Repo/Repo.js","Assets/Components/Main/User/User.js","Assets/Components/Main/ButtonTheme/ButtonTheme.js","Assets/Components/Main/Main.js","Assets/Components/Global/Snackbar/Snackbar.js","App.js","serviceWorker.js","index.js"],"names":["Brand","href","className","IconGithub","name","size","animation","type","hover","infinite","Header","Icon","Axios","axios","create","baseURL","Context","createContext","localStorage","getItem","setItem","theme","ContextProvider","props","useState","user","repos","error","loading","state","setState","Provider","value","children","Search","setValue","useContext","btn","useRef","setLoadingHandler","amount","preveState","setErrorHandler","placeholder","onChange","event","target","fieldChange","onKeyUp","keyCode","current","click","fieldKeyup","ref","disabled","onClick","userName","get","then","data","repos_url","getUserRepos","arrRepo","index","el","push","lang","language","html_url","setUserRepos","catch","Error","setTimeout","console","clear","Loading","LoadingUser","Avatar","avatarUrl","src","alt","InformationUser","location","repo","followers","following","Profile","bio","rel","ListItemRepo","ListRepo","length","map","key","privates","private","Repo","User","login","avatar_url","public_repos","ButtonTheme","fill","Main","Snackbar","text","isShow","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.86d311d3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Brand = () => {\r\n\r\n\treturn <a href=\"/\" className=\"header__brand\">Github Finder</a>\r\n};\r\n\r\nexport default Brand;","import React from \"react\";\r\nimport Icon from 'react-eva-icons';\r\n\r\nconst IconGithub = () => {\r\n\r\n\treturn <Icon\r\n\t\tname=\"github\"\r\n\t\tsize=\"xlarge\"\r\n\t\tanimation={{\r\n\t\t\ttype: \"flip\",\r\n\t\t\thover: true,\r\n\t\t\tinfinite: false\r\n\t\t}}\r\n\t/>\r\n};\r\n\r\nexport default IconGithub;","import React from \"react\";\r\nimport Brand from \"./Brand/Brand\";\r\nimport IconGithub from \"./Icon/Icon\";\r\n\r\nconst Header = () => {\r\n\r\n\treturn (\r\n\t\t<header className=\"Header\">\r\n\t\t\t<Brand/>\r\n\t\t\t<IconGithub/>\r\n\t\t</header>\r\n\t)\r\n};\r\n\r\nexport default Header;","import axios from 'axios';\r\n\r\nconst Axios = axios.create({\r\n  baseURL: \"https://api.github.com/users/\"\r\n});\r\n\r\n// get user with user name\r\nconst getUserWithUserName = userName => {\r\n  return Axios.get(userName);\r\n};\r\n\r\nconst getUserRepos = ({userName, repos_url}) => {\r\n\r\n  return axios.get(repos_url);\r\n\r\n}\r\n\r\nexport { getUserWithUserName, getUserRepos };","import React, { createContext, useState } from 'react';\r\n\r\nconst Context = createContext();\r\n\r\nif(!localStorage.getItem(\"theme\")){\r\n\tlocalStorage.setItem(\"theme\", true);\r\n};\r\nlet theme = localStorage.getItem(\"theme\");\r\n\r\nconst ContextProvider = props => {\r\n    const [ state, setState ] = useState({\r\n        user: null,\r\n        repos: [],\r\n        error: false,\r\n        loading: false,\r\n        theme: theme === \"true\" ? true : false\r\n    });\r\n\r\n    return (\r\n        <Context.Provider value={{state, setState}}>\r\n            {props.children}\r\n        </Context.Provider>\r\n    )\r\n};\r\n\r\nexport { Context };\r\nexport default ContextProvider;","import React, { useState, useContext, useRef } from 'react';\r\nimport { getUserWithUserName, getUserRepos } from './../../../Services/GithubApi'\r\nimport { Context } from './../../../Context/Context';\r\n\r\nconst Search = () => {\r\n    const [ value, setValue ] = useState(\"\");\r\n    const { setState } = useContext(Context);\r\n    const btn = useRef();\r\n\r\n    const setLoadingHandler = amount => {\r\n        setState(preveState => ({\r\n            ...preveState,\r\n            loading: amount,\r\n            error: false\r\n        }))\r\n    };\r\n\r\n    const setUsersHandler = user => {\r\n        setState(preveState => ({\r\n            ...preveState,\r\n            user\r\n        }));\r\n    }\r\n\r\n    const setUserRepos = repos => {\r\n        setState(preveState => ({\r\n            ...preveState,\r\n            repos\r\n        }));\r\n    }\r\n\r\n    const setErrorHandler = amount => {\r\n        setState(preveState => ({\r\n          ...preveState,\r\n          error: amount\r\n        }));\r\n    }\r\n\r\n    const fieldChange = event => {\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    const fieldKeyup = event => {\r\n        if(event.keyCode === 13){\r\n            btn.current.click();\r\n        }\r\n    }\r\n\r\n    const btnHandler = () => {\r\n\r\n        setLoadingHandler(true);\r\n\r\n        getUserWithUserName(value)\r\n            .then(({data}) => {\r\n                setUsersHandler(data);\r\n                setValue(\"\");\r\n\r\n                getUserRepos({ userName: data.userName, repos_url: data.repos_url})\r\n                    .then(repos => {\r\n                        const arrRepo = [];\r\n                        for(let index = 0; index <= 5; index++){\r\n                            const el = repos.data[index];\r\n                            arrRepo.push({\r\n                              lang: el.language,\r\n                              name: el.name,\r\n                              html_url: el.html_url\r\n                            });\r\n                        }\r\n                        setUserRepos(arrRepo);\r\n                        setLoadingHandler(false);\r\n                    })\r\n                    .catch(error => {\r\n                        throw new Error(error);\r\n                    })\r\n\r\n            })\r\n            .catch(() => {\r\n                setLoadingHandler(false);\r\n                setErrorHandler(true);\r\n                setTimeout(() => { \r\n                    setErrorHandler(false);\r\n                    console.clear();\r\n                }, 4000);\r\n                setValue(\"\");\r\n\r\n            })\r\n\r\n    };\r\n\r\n    return (\r\n      <section className=\"search\">\r\n          <input type=\"text\" className=\"form-control\" value={value} placeholder=\"please write user name\" onChange={event => fieldChange(event)} onKeyUp={event => fieldKeyup(event)} />\r\n          <button type=\"button\" ref={btn} className=\"btn\" disabled={value === \"\" && true} onClick={btnHandler} >Search User</button>\r\n      </section>\r\n    );\r\n}\r\n\r\nexport default Search;","import React from 'react'\r\n\r\nconst Loading = () => {\r\n    return (\r\n      <div className=\"ml-loader\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Loading\r\n","import React from \"react\";\r\nimport Loading from './../../Global/Loading/Loading';\r\n\r\nconst LoadingUser = () => {\r\n  return (\r\n      <section className=\"main__user-loading\">\r\n          <Loading />\r\n      </section>\r\n  );\r\n};\r\n\r\nexport default LoadingUser;\r\n","import React from \"react\";\r\n\r\nconst Avatar = ({ avatarUrl }) => {\r\n  return (\r\n    <div className=\"card-img-top\">\r\n      <img src={avatarUrl} alt=\"Avatar Image\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import React from \"react\";\r\n\r\nconst InformationUser = ({userName, name, location, repo, followers, following, type}) => {\r\n  return (\r\n    <ul className=\"list-group InformationUser\">\r\n\r\n      <li className=\"list-group-item\">\r\n          <span>userName</span>\r\n          \r\n          <span>{userName}</span>\r\n      </li>\r\n\r\n      <li className=\"list-group-item\">\r\n          <span>name</span>\r\n          \r\n          <span>{name}</span>\r\n      </li>\r\n\r\n      <li className=\"list-group-item\">\r\n          <span>location</span>\r\n          \r\n          <span>{location}</span>\r\n      </li>\r\n\r\n      <li className=\"list-group-item\">\r\n          <span>repo</span>\r\n          \r\n          <span>{repo}</span>\r\n      </li>\r\n\r\n      <li className=\"list-group-item\">\r\n          <span>followers</span>\r\n          \r\n          <span>{followers}</span>\r\n      </li>\r\n\r\n      <li className=\"list-group-item\">\r\n          <span>following</span>\r\n          \r\n          <span>{following}</span>\r\n      </li>\r\n\r\n      <li className=\"list-group-item\">\r\n          <span>type</span>\r\n          \r\n          <span>{type}</span>\r\n      </li>\r\n\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default InformationUser;\r\n","import React from \"react\";\r\nimport Avatar from \"./Avatar/Avatar\";\r\nimport InformationUser from \"./InformationUser/InformationUser\";\r\n\r\nconst Profile = ({\r\n  userName,\r\n  avatarUrl,\r\n  name,\r\n  bio,\r\n  location,\r\n  repo,\r\n  followers,\r\n  following,\r\n  type,\r\n  html_url\r\n}) => {\r\n  return (\r\n    <div className=\"col-md-4 col-xs-12 m-0 p-0\">\r\n      <Avatar avatarUrl={avatarUrl} />\r\n      <div className=\"linkGoPage\">\r\n        <a href={html_url} className=\"btn\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Go to Page User\r\n        </a>\r\n      </div>\r\n      <InformationUser\r\n        userName={userName}\r\n        name={name}\r\n        location={location}\r\n        repo={repo}\r\n        followers={followers}\r\n        following={following}\r\n        type={type}\r\n      />\r\n      <p className=\"bio\">{bio}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;","import React from \"react\";\r\n\r\nconst ListItemRepo = props => {\r\n    const {html_url, name, lang} = props;\r\n  return (\r\n    <li className=\"list-group-item\">\r\n      <a href={html_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        {name}\r\n      </a>\r\n      <span className=\"badge badge-dark\">{lang}</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ListItemRepo;\r\n","import React, { useContext } from 'react';\r\nimport { Context } from './../../../../../Context/Context';\r\nimport ListItemRepo from './ListItemRepo/ListItemRepo';\r\n\r\nconst ListRepo = () => {\r\n    const { state } = useContext(Context);\r\n    const { repos } = state;\r\n\r\n    return (\r\n      <ul className=\"list-group\">\r\n        {repos.length >= 1 &&\r\n          repos.map((el, key) => (\r\n            <ListItemRepo\r\n              html_url={el.html_url}\r\n              name={el.name}\r\n              privates={el.private}\r\n              lang={el.lang}\r\n              key={key}\r\n            />\r\n          ))}\r\n      </ul>\r\n    );\r\n}\r\n\r\nexport default ListRepo\r\n","import React from 'react';\r\nimport ListRepo from './ListRepo/ListRepo';\r\n\r\nconst Repo = () => {\r\n    return (\r\n        <div className=\"col-md-8 col-xs-12 m-0 p-0 repos\">\r\n            <ListRepo />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Repo\r\n","import React from 'react';\r\nimport Profile from './Profile/Profile';\r\nimport Repo from './Repo/Repo';\r\n\r\nconst User = ({ user, repos }) => {\r\n  return (\r\n    <section className=\"container row user\">\r\n      {user && (\r\n        <Profile\r\n          userName={user.login}\r\n          avatarUrl={user.avatar_url}\r\n          name={user.name}\r\n          bio={user.bio}\r\n          location={user.location}\r\n          repo={user.public_repos}\r\n          followers={user.followers}\r\n          following={user.following}\r\n          type={user.type}\r\n          html_url={user.html_url}\r\n        />\r\n      )}\r\n      {repos && <Repo />}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default User;","import React, { useContext } from 'react';\r\nimport Icon from 'react-eva-icons';\r\nimport { Context } from './../../../Context/Context';\r\n\r\nconst ButtonTheme = () => {\r\n\r\n    const { state, setState } = useContext(Context);\r\n    const { theme, user } = state;\r\n\r\n    const setThemeHandler = () => {\r\n        setState(preveState => ({\r\n            ...preveState,\r\n            theme: !preveState.theme\r\n        }));\r\n\t\tlocalStorage.setItem(\"theme\", !theme);\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {user && (\r\n          <button\r\n            className=\"button-theme bg-dark border\"\r\n            onClick={setThemeHandler}\r\n          >\r\n            <Icon\r\n              name=\"bulb-outline\"\r\n              size=\"xlarge\"\r\n              fill=\"white\"\r\n              animation={{\r\n                type: \"flip\",\r\n                hover: true,\r\n                infinite: false\r\n              }}\r\n            />\r\n          </button>\r\n        )}\r\n      </>\r\n    );\r\n}\r\n\r\nexport default ButtonTheme\r\n","import React, { useContext } from 'react';\r\nimport Search from './Search/Search';\r\nimport LoadingUser from './LoadingUser/LoadingUser';\r\nimport User from './User/User';\r\nimport ButtonTheme from './ButtonTheme/ButtonTheme';\r\nimport { Context } from './../../Context/Context';\r\n\r\nconst Main = () => {\r\n    const { state } = useContext(Context);\r\n    const { loading, user, repos, theme } = state;\r\n\r\n    return (\r\n      <main className={theme ? \"bg-white\" : \"bg-dark\"}>\r\n        <Search />\r\n        {loading && <LoadingUser />}\r\n        {user && <User user={user} repos={repos} />}\r\n        <ButtonTheme/>\r\n      </main>\r\n    );\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\r\n\r\nconst Snackbar = ({text, type, isShow}) => {\r\n    return <div className={`snackbar ${type} ${isShow === true && \"show-snackbar\"}`}>{text}</div>;\r\n}\r\n\r\nexport default Snackbar\r\n","import React, { useContext } from 'react';\nimport Header from './Assets/Components/Header/Header';\nimport Main from './Assets/Components/Main/Main';\nimport Snackbar from './Assets/Components/Global/Snackbar/Snackbar';\nimport { Context } from './Assets/Context/Context';\n\nfunction App() {\n  const { state } = useContext(Context);\n  const { error } = state;\n\n  \n  return (\n    <div className=\"App\">\n      <Snackbar text=\"this user name not found in github\" isShow={error} type=\"error\"/>\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Assets/Styles/main.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ContextProvider from './Assets/Context/Context';\n\nReactDOM.render(\n  <ContextProvider>\n    <App />\n  </ContextProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}